TAU ON THE K COMPUTER

TAU (Tuning and Analysis Utilities) is performance analysis tool framework. TAU installation on the K computer provides profiling and event tracing features for C, C++ and Fortran programs. 

Complete TAU documentation can be found here: https://www.cs.uoregon.edu/research/tau/docs.php.


GENERAL IDEAS

PROFILING 

Profiling helps to understand which routines, loops and statements in user program consume most of the time. 
To enable profiling TAU on K provides two methods of user program instrumentation: Source based and Compiler based. Source based instrumentation can track more events compared to Compiler based instrumentation. Compiler based instrumentation requires re-compiling target application and Source instrumentation additionally requires PDT library, which is also installed on the K computer.

TRACING

Typically, profiling shows the distribution of execution time across routines. It can show the code locations associated with specific bottlenecks, but it can not show the temporal aspect of performance variations. Tracing the execution of a parallel program shows when and where an event occurred in terms of the process that executed it and the location in the source code. 
Tracing can be done using instrumented binary (see Source based and Compiler based instrumentation sections). 

Beware, that trace files can easily become very large!



INSTRUCTIONS

INSTRUMENTATION

SOURCE BASED INSTRUMENTATION INSTRUCTIONS

Set TAU environment variables on K login node in the shell you use for building your program:

> source /opt/aics/TAU/env25.sh
> export TAU_MAKEFILE=/opt/aics/TAU/tau-2.25.1/sparc64fx/lib/Makefile.tau-mpi-pdt-openmp-opari-trace-fujitsu

TAU provides these scripts: tau_f90.sh, tau_cc.sh, and tau_cxx.sh to instrument and compile Fortran, C, and C++ programs respectively. You might use tau_cc.sh to compile a C program by typing:

> tau_cc.sh sampleCprogram.c



COMPILER-BASED INSTRUMENTATION INSTRUCTIONS

Set TAU environment variables on K login node in the shell you use for building your program (same as above).

TAU provides these scripts: tau_f90.sh, tau_cc.sh, and tau_cxx.sh to instrument and compile Fortran, C, and C++ programs respectively. Compile the same way as for source-based instrumentation with extra option: -tau_options=-optCompInst.

You might use tau_cc.sh to compile a C program by typing:

> tau_cc.sh -tau_options=-optCompInst sampleCprogram.c

You can also set the options in environment variables:

>export TAU_OPTIONS=-optCompInst
>tau_cc.sh sampleCprogram.c



OPTIONS TO TAU COMPILER SCRIPTS

These are some commonly used options available to the TAU compiler scripts. Either set them via the TAU_OPTIONS environment variable or the -tau_options= option to tau_f90.sh, tau_cc.sh, or tau_cxx.sh

-optVerbose     Enable verbose output (default: on)
-optKeepFiles      Do not remove intermediate files

A list of options for the TAU compiler scripts can be found by typing man tau_compiler.sh or in the reference guide here: https://www.cs.uoregon.edu/research/tau/docs/newguide/re01.html.



CHECK INSTRUMENTED BINARY  

Instrumented binary will contain TAU objects that enable program profiling and tracing. To make sure the binary contains TAU objects you can check it with the following command:

 >nm -a instrumented_binary_file | grep -i tau | wc -l

The command will return the number of TAU objects. 



PROFILING

PROFILING INSTRUCTIONS

To produce profile for your application with instrumented binary include the following instructions in your job script (typically after ". /work/system/Env_base" line and before "mpiexec ..." line):

export TAU_PROFILE="1"
export TAU_TRACE="0"
export TAU_PROFILE_FORMAT=merged

Use instrumented binary after "mpiexec" command.

Include the following line in the job script for staging out profile from compute nodes to "profiles" directory (directory name can be changed) on login nodes:

#PJM --stgout "./*.xml ./profiles/"

Submit your job with "pjsub" command. After the job is finished profile will be saved in "profiles" directory. 
This will produce a profile in "merged" format with .xml extention. This file can be opened in ParaProf. See VISUALISATION section below for details.


TRACING

TRACING INSTRUCTIONS

In your job script insert the following lines for staging out trace files:

#PJM --stgout "rank=* ./events.* ./trace_dir/"
#PJM --stgout "rank=* ./tautrace.* ./trace_dir/"

Substitute "trace_dir" with any existing directory name. 

Also include the following lines to set up environment variables on computer nodes:

export TAU_PROFILE="0"
export TAU_TRACE="1"

You can also set TAU_THROTTLE="1" to enable TAU throttle feature for large programs (see https://www.cs.uoregon.edu/research/tau/docs/tutorial/ch01s05.html). 



VISUALISATION

For viewing profiles and traces TAU provides respectively Paraprof and Jumpshot programs. 
We recommend that you install TAU with these programs locally on your computer as using them over network is extremely slow. You can download profiles/traces to your computer or mount K computer login node folder with profiles/traces to your local computer with SSHFS. 

TAU distributions for different operating systems can be downloaded from here: https://www.cs.uoregon.edu/research/tau/downloads.php.



PARAPROF (PROFILES)

For profile visualisation start Paraprof program. 
From menu select File > Open...,
In Trial Type select "ParaProf Packed Profile". Press "Select File" button and navigate to the directory with profile. Highlight the profiles directory and press "Select", then "Ok" button. 

A new window with profile visualisation will open. 
Paraprof user manual can be found here: https://www.cs.uoregon.edu/research/tau/docs/paraprof/.



JUMPSHOT (TRACES)

To use Jumpshot for TAU traces visualisation you need to merge traces and convert merged file to SLOG2 format. 
TAU produces sets of files: events.*.edf and tautrace.*.trc for every MPI rank. 
To merge individual traces execute the following command in the directory with trace files:

> . /opt/aics/TAU/env25.sh
> traceconvert.sh

This will produce three files: tau.trc and tau.edf and tau.slog2.

The last file in SLOG2 format can be viewed in Jumpshot.

Open Jumpshot and from top menu select: File > Select...
Navigate to the directory with traces and select tau.slog2 file. Click "Open".


A new window with profiles will open. Please note, that for a large trace files (with more than approximately a few hundreds MPI ranks) Jumpshot may need a few minutes or longer to render traces. 
Jumpshot user guide can be found here: http://www.mcs.anl.gov/research/projects/perfvis/software/viewers/jumpshot-4/usersguide.html.



NOTES


* TAU dynamic instrumentation feature does not work on the K computer due to problems with porting Dyninst program to Sparc architecture. 

* TAU features not mentioned in this README have not been tested on the K computer and might not work. 

* TAU is being developed jointly by the University of Oregon, Los Alamos National Laboratory, and Research Centre Julich, ZAM, Germany. 



CONTACTS

Bryzgalov Peter (petr.bryzgalov at riken dot jp)


Last edit: 2015.06.02
